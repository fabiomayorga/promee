<?phpclass solicitudController extends Controller {    private $_solicitud;    private $_usuario;    public function __construct() {        parent::__construct();        $this->_solicitud = $this->loadModel('solicitud', 'cotizacion');        $this->_usuario = $this->loadModel('usuario', 'admin');    }    public function index() {        $this->_acl->acceso('solicitud');               $this->_view->assign('titulo', 'Cotizaciones');        if (Session::get('level')==1) {//admin        	$condicion=" estado != 2 and estado!=5";        }        else{        	if (Session::get('level')==2) {        		$condicion="   estado!=5 and (estado =1  or estado=3)";        	}        	else{//solicitante 4 se puede modificar         	 $condicion=" id_usu= ".Session::get('id_usuario')." and  estado!=5";        	}        }               $solicitudes=$this->_solicitud->consultar($condicion);        $this->_view->assign('datos', $solicitudes);                $this->_view->renderizar('index', 'solicitud');    }    public function nuevo()    {    	$this->_acl->acceso('crear_solicitud');    	$this->_view->setJs(array('ready'));    	$this->_view->assign('titulo', 'Nueva solicitud');    	$this->_view->renderizar('nuevo', 'solicitud');    }    public function crear()    {    	//[ creacion de solicitud    		$fecha_pedido = $_POST['fpano']."-".$_POST['fpmes']."-".$_POST['fpdia'];    		$fecha_limite = $_POST['feano']."-".$_POST['femes']."-".$_POST['fedia'];    	    $ultimocodigo = $this->_solicitud->consultar("1");    	    $counultimoregistro = count($ultimocodigo) - 1;    	        	    if ($counultimoregistro<0) {    	    $codigosiguiente='10001';	    	    }    	    else{    	    $codigosiguiente= $ultimocodigo[$counultimoregistro]['codigo'] + 1;    		}    	                $data= array(                                ':codigo' => $codigosiguiente,                ':fecha_pedido' => $fecha_pedido,                ':fecha_limite' => $fecha_limite,                ':realizado_por' => $_POST['realizado'],                ':contrato_area' => $_POST['area'],                ':centro_costo' => $_POST['centrocosto'],                ':proveedor' => $_POST['proveedor'],                ':observacion' => $_POST['observacion'],                ':fecha_creacion' => date("Y-m-d"),                ':id_usu'=>Session::get('id_usuario'),            );           	$key = $this->_solicitud->crear($data);                    //]        //[ creacion productos para la solicitud           	    	    for ($i=0; $i <count($_POST['producto']) ; $i++) {     	    	$data= array(                                ':descripcion' => $_POST['producto'][$i]['descripcion'],                ':unidad_comercial' => $_POST['producto'][$i]['unidad_comercial'],                ':cantidad_pedida' => $_POST['producto'][$i]['cantidad_pedida'],                ':cantidad_despachada' => $_POST['producto'][$i]['cantidad_despachada'],                ':valor_unitario' => $_POST['producto'][$i]['valor_unitario'],                ':valor_iva' => $_POST['producto'][$i]['valor_iva'],                ':id_solicitud' => $key['id']		        );		       		       	$this->_solicitud->crearProductos($data);    	    }                       	$this->index();         //]              }    public function modificar($id)    {    	$this->_acl->acceso('modificar_solicitud');    	$this->_view->assign('titulo', 'Edición');    	$this->_view->assign('id', $id);    	$condicion=" id=".$id;    	$solicitudes=$this->_solicitud->consultar($condicion);    	$porciones = explode("-", $solicitudes[0]['fecha_pedido']);    	$solicitudes[0]['fpdia']=$porciones[0];    	$solicitudes[0]['fpmes']=$porciones[1];    	$solicitudes[0]['fpano']=$porciones[2];    	$porciones = explode("-", $solicitudes[0]['fecha_limite']);    	$solicitudes[0]['fedia']=$porciones[0];    	$solicitudes[0]['femes']=$porciones[1];    	$solicitudes[0]['feano']=$porciones[2];        $this->_view->assign('dato', $solicitudes[0]);    	    	$this->_view->renderizar('editar', 'solicitud');    }    public function editar($id)    {        	foreach ($_POST['producto'] as $key) {    		$this->_solicitud->precios($key);    	}    	$this->_solicitud->cambioEstado($_POST['id'],2);    	$this->index();    }    public function aprobacion()    {        $this->_acl->acceso('aprobacion');               $this->_view->assign('titulo', 'Cotizaciones aprobacion');      	$this->_view->setJs(array('ready'));        $condicion=" estado = 2 ";        $solicitudes=$this->_solicitud->consultar($condicion);        $this->_view->assign('datos', $solicitudes);                $this->_view->renderizar('aprobacion', 'solicitud');    }    public function aprobar($id)    {    	$this->_solicitud->cambioEstado($id,3);    	//correo        $condicion=" rol_key = 2";        $usuario=$this->_usuario->consultar($condicion);         for ($i=0; $i < count($usuario) ; $i++) {                 $body = "Cordial Saludo\n                La presente es para informar que se a aprobado una solicitud.\n\n";                     $this->getLibrary("xpm" . DS . "SMTP");                    $email=$usuario[$i]['usu_email'];                    $m = 'From: '.EMAIL_USER."\r\n".                         'To: '.$email."\r\n".                         'Subject: Aprobación'."\r\n".                         'Content-Type: text/plain'."\r\n\r\n".                         ''.$body;                    // connect to MTA server (relay) 'smtp.gmail.com' via SSL (TLS encryption) with authentication using port '465' and timeout '10' secounds                    // make sure you have OpenSSL module (extension) enable on your php configuration                    $c = SMTP::connect(EMAIL_HOST, (int) EMAIL_SALIDA,EMAIL_USER, EMAIL_PASS, 'tls', 10) or die(print_r($_RESULT));                    // send mail relay                    $s = SMTP::send($c, array($email), $m, EMAIL_USER);            }        $this->aprobacion();    }    public function noaprobar($id)    {        $this->_solicitud->cambioEstado($id,0);        $this->aprobacion();    }    public function entrega($id)    {    	$this->_solicitud->cambioEstado($id,4);        $this->_solicitud->entrega($id,Session::get('id_usuario'));    	$this->index();    }        public function recibido($id)    {    	$this->_solicitud->cambioEstado($id,5);    	$this->index();    }    public function pdf($id=0)    {        require_once 'libs/dompdf/dompdf_config.inc.php';        # Contenido HTML del documento que queremos generar en PDF.        $html='<p>andres</p>';        # Instanciamos un objeto de la clase DOMPDF.        $mipdf = new DOMPDF();        # Definimos el tamaño y orientación del papel que queremos.        # O por defecto cogerá el que está en el fichero de configuración.        $mipdf ->set_paper("A4", "portrait");        # Cargamos el contenido HTML.        $mipdf ->load_html(utf8_decode($html));        # Renderizamos el documento PDF.        $mipdf ->render();        # Enviamos el fichero PDF al navegador.        $mipdf ->stream('FicheroEjemplo.pdf');    }}?>